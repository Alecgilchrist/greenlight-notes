{"title":"Notes from Repl","message":"\n/*\nMULTIPLICATION WITHOUT HELPERS\n*/\n// create a function that multiplies WITHOUT using the native multiplication symbol in javascript ( this one -> * )\n\n// EXAMPLE USAGE:\n// myMultiplier(3, 6) // <-- Should return 18\n//This is the simple solution\n  function multiply(a, b) {\n    console.log(a/(1 / b));\n}\n\nmultiply(3, 6);\n/*this is the no division way using a while loop to add argument b a# of times\n*/\n  function multiply2(a, b) {\n    var answer = 0;\n    i=0;\n    while(i < a) {\n    answer = (answer + b);\n    i++;\n  }\n    return answer;\n  }\n var realAnswer = multiply2(50,10);\n console.log(realAnswer);\n        \n //below is my attempt to play with loops and arrays to have the same effect\n    \nvar alpha = [];\nvar beta = [];\nvar answer;\n\n//defined variables for use in myMultiplier\n\n\n\nfunction myMultiplier(a, b) {\n  i = 0;\n  while(i < a) {\n    alpha + 1;\n    alpha.push(b);\n    i++;\n     \n    \n  }\n  return alpha;\n  \n}\n//create an array for alpha that populates with #a instances of #b\nfor(j = 0; j < alpha.length; j++){\n  beta += alpha[j];\n  \n}\nvar test = myMultiplier(3, 100);\n  var answer = test.reduce(function(last, current){\n  return (last + current);\n// accepts arguments and then reduces the created array into var answer\n});\nconsole.log(answer);\n\n\n//myMultiplier(3, 10);\n//console.log(answer)\n\n/*\n}\nconsole.log(alpha);\nif (alpha === true){\n  var answer = alpha.reduce(function(last, current){\n  console.log(last + current);\n});\n}\n*/\n//for loop version\nfunction toTitleCase(string) {\n    var words = string.split(' ');\n    for(var i = 0; i < words.length; i++) {\n        var word = words[i];\n        words[i] = word[0].toUpperCase() + word.slice(1);\n    }\n    return words.join(' ');\n}\n\nvar titleCasedOne = toTitleCase('the rain in spain falls mainly in the plains!');\nvar titleCasedTwo = toTitleCase('programming is awesome!');\n\nconsole.log(titleCasedOne);\nconsole.log(titleCasedTwo);\n\n\n//while loop version\n\n\nfunction toTitleCase(string) {\n    var words = string.split(' ');\n    i=0;\n    while(i < words.length) {\n        word = words[i];\n        words[i] = word[0].toUpperCase() + word.slice(1);\n        i++;\n    }\n    return words.join(' ');\n}\nvar title = toTitleCase('the quick brown fox jumped over the lazy dog');\n\nconsole.log(title);\n\n\n\n\n\n/* ar sum = euros.reduce( function(total, amount){\n  return total + amount\n});\n\nmultiply(3, 6);\nmyMultiplier(3, 6);\nconsole.log(alpha, beta);\nconsole.log(answer);\n\n\n/*\nSTRING EXPLOSION\n*/\n// create a function that, when given numbers, returns a string where//each number from the input is repeated that number of times.\n//EXAMPLE:\n// explode(5)  /// <-- should return '55555'\n// explode(273)  /// <-- should return '227777777333' \n/*var exploded1 = [];\nvar exploded2 = [];\n\nfunction explode(a, b) {\n  i = 0;\n  while(i < a) {\n    exploded1 + 1;\n    exploded1.push(a);\n    i++;\n}\n//create an array for exploded1 that populates with #a instances of a\nfor(j = 0; j < exploded1.length; j++){\n  exploded2 += exploded1[j];\n\n}\nconsole.log(exploded2);\n\n//\n  \n}\nexplode(7);\n\n/*\nUPPERCASER\n\nCreate a function that takes a string and uppercases the first letter of each word in that string, while lowercasing every other letter\nBONUS:\nEXAMPLE:\nuppercaseFirst('the quick brown fox jumped over the lazy dog')\n^ above should return 'The Quick Brown Fox Jumped Over The Lazy Dog'\n*/\n\n/* split the string, map to an array then apply uppercase to the 0 place of every item in said array as i did in this codewarriors challenge\nvar input;\nfunction highAndLow(numbers){\n  numbers = numbers.split(' ').map(Number);\n  return Math.max.apply(0, numbers) + ' ' + Math.min.apply(0, numbers);\n}\n\n\nhighAndLow('-5 5 22 193 -199')\n*/\n/*\nfunction toTitleCase(string) {\n    var words = string.split(' ');\n    for(var i = 0; i < words.length; i++) {\n        var word = words[i];\n        words[i] = word[0].toUpperCase() + word.slice(1);\n        return words;\n    \n        \n    }\n}\n\ntoTitleCase('the quick brown fox jumped over the lazy dog');\n\nfunction upperCaseFirst(sentence){\n  sentence = sentence.split(' ').map(Object);\n  return ()\n}\n\nfunction highAndLow(numbers){\n  numbers = numbers.split(' ').map(Number);\n  return Math.max.apply(0, numbers) + ' ' + Math.min.apply(0, numbers);\n}\n\n\nhighAndLow('-5 5 22 193 -199')\n\n*/\n\nfunction toTitleCase(string) {\n    var words = string.split(' ');\n    i=0;\n    while(i < words.length) {\n        word = words[i];\n        words[i] = word[0].toUpperCase() + word.slice(1);\n        i++;\n    }\n    return words.join(' ');\n}\nvar title = toTitleCase('the quick brown fox jumped over the lazy dog');\n\nconsole.log(title);\n\n\n\n\n\n\n\n\nfunction likes(names) {\nif(names.length === 1){\nreturn names[0] + ' ' + 'likes this';\n}else if(names.length === 2){\nreturn names[0] + ' ' + 'and' + ' ' + names[1] + ' ' + 'like this';\n}else if(names.length === 3){\nreturn names[0] + ' ' + names[1] + ' ' + 'and' + ' ' + names[2] + ' ' + 'like this';\n} else if(names.length > 3) {\nreturn names[0] + ' ' + names[1] + ' ' + 'and two others like this';\n  \n}\nreturn 'no one likes this';\n\n}\nvar test = likes(['mark', 'tim','mark', 'tim']);\n\nconsole.log(test);\n\n\n\n\n\nfunction likes(names) {\nif(names.length === 1){\nreturn names[0] + ' ' + 'likes this';\n}else if(names.length === 2){\nreturn names[0] + ' ' + 'and' + ' ' + names[1] + ' ' + 'like this';\n}else if(names.length === 3){\nreturn names[0] + ', ' + names[1] + ' and' + ' ' + names[2] + ' ' + 'like this';\n} else if(names.length > 3) {\nreturn names[0] + ', ' + names[1] + ' and ' + (names.length - 2) + ' others like this';\n  \n}\nreturn 'no one likes this';\n\n}\n\n\nfunction even_or_odd(number) {\n  if(number % 2 === 0){\n    return 'Even';\n  }\n  return 'Odd';\n}\nvar evenOdd = even_or_odd();\nconsole.log(evenOdd);\n\n \nfunction removeSmallest(numbers) {\n  var min = Math.min.apply(null, numbers);\n  var numberStorage = numbers.indexOf(min);\n   numbers.splice(numberStorage, 1);\n\n  return numbers;\n \n}\n  var smallestRemoved = removeSmallest([12, 32, 4, 7, 12]);\n  \n  \n  // Start with an initial array\n// var array = [\"a\", \"b\", \"c\"];\n\n// Find and remove item from an array\n// var i = array.indexOf(\"b\");\n// if(i != -1) {\n// \tarray.splice(i, 1);\n\n\n  \n // i = 0;\n  // while(i < numbers.length) {\n    // \n    // i++;\n  \n  console.log(smallestRemoved);\n  \n\n // throw \"TODO: removeSmallest\";\n\n// var rmvs = removeSmallest([1, 2, 3, 4, 5]);\n// console.log(min)\nvar cars = {\n  one:'honda',\n  two:'ford',\n  three:'chevy'\n};\n/*\nconsole.log(Object.getOwnPropertyNames(cars));\nconsole.log(Object.keys(cars));\n\nvar obj = {\n    one: 'a',\n    two: 'b',\n    three: 'c'\n};\n\nfor(var key in obj) {\n    console.log(key);\n}\nvar obj = {\n    one: 'a',\n    two: 'b',\n    three: 'c'\n};\n\nfor(var key in obj) {\n    console.log(obj[key]);\n}\n\n\n\n*/\n\n","id":"f3da709d-8ca4-46f1-b9e4-6c05953359bb","date":"2018-03-29T21:39:05.325Z"}